version: '3'

services:
  postgres:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "5432:5432"
  rabbitmq:
    image: "rabbitmq:management"
    env_file:
      - .env
    ports:
      - "5672:5672"
      - "15672:15672"
  callback_receiver:
    image: cyborgbackup:latest
    command: bash -c "python /cyborgbackup/manage.py run_callback_receiver -v 3"
    volumes:
      - ./src:/cyborgbackup
    env_file:
      - .env
    depends_on:
      - postgres
      - elasticsearch
      - rabbitmq
  channel_workers:
    image: cyborgbackup:latest
    command: bash -c 'python /cyborgbackup/manage.py runworker --only-channels websocket.*'
    volumes:
      - ./src:/cyborgbackup
    env_file:
      - .env
    depends_on:
      - postgres
      - elasticsearch
      - rabbitmq
  web:
    image: cyborgbackup:latest
    #command: bash -c "python /cyborgbackup/manage.py migrate --noinput && python /cyborgbackup/manage.py runserver 0.0.0.0:8000"
    command: bash -c "python /cyborgbackup/manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./src:/cyborgbackup
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - elasticsearch
      - rabbitmq
  celery:
    image: cyborgbackup:latest
    command: celery -A cyborgbackup worker -l debug -E
    volumes:
      - ./src:/cyborgbackup
    env_file:
      - .env
    depends_on:
      - postgres
      - elasticsearch
      - rabbitmq
  celery_beat:
    image: cyborgbackup:latest
    command: celery -A cyborgbackup beat -l debug
    volumes:
      - ./src:/cyborgbackup
    env_file:
      - .env
    depends_on:
      - postgres
      - elasticsearch
      - rabbitmq
  flower:
    image: cyborgbackup:latest
    command: celery flower -A cyborgbackup --address=0.0.0.0 --port=8001
    volumes:
      - ./src:/cyborgbackup
    env_file:
      - .env
    ports:
      - "8001:8001"
    depends_on:
      - postgres
      - rabbitmq
      - celery
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    env_file:
      - .env
  elasticsearch:
    image: elasticsearch:6.8.4
    restart: always
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node

volumes:
  postgres_data:
  esdata:
